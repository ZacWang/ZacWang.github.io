{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1457165444532},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1457165444547},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1457165444547},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1457165444547},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1457165444547},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1457165444547},{"_id":"source/_posts/visual-studio-2015-bug-about-git-source-control.md","hash":"e372fab56654f644065a7b368b5dbca208a33b7b","modified":1458094787769},{"_id":"source/_posts/powershell和cmake.md","hash":"2273599fce1afa0a30524882010093fb060623b5","modified":1457520478991},{"_id":"source/_posts/终于消灭了一个BUG.md","hash":"26b8bb7f651356baf6e782b44be2c0212745d175","modified":1458569817675},{"_id":"source/_posts/开篇.md","hash":"e09d2bd6cc69cf2cca8c0bd50890298407910a50","modified":1457232772823},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1457165444563},{"_id":"source/_posts/除了一个小bug.md","hash":"6c32cc49bd987d478236e8280b8ff4176f304c19","modified":1457425968666},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1457165444578},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1457165444578},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1457165444578},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1457165444578},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1457165444578},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1457165444578},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1457165444578},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1457165444578},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1457165444578},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1457165444578},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1457165444578},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1457165444578},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1457165444578},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1457165444563},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1457165444547},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1457165444563},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1457165444563},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1457165444563},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1457165444563},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1457165444563},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1457165444547},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1457165444563},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1457165444547},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1457165444547},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1457165444547},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1457165444547},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1457165444594},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1457165444594},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1457165444594},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1457165444594},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1457165444594},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1457165444594},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1457165444594},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1457165444594},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1457165444594},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1457165444594},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1457165444594},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1457165444594},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1457165444594},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1457165444594},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1457165444594},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1457165444594},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"36eefe6332b86b66023a9884b754d305235846b4","modified":1457165444594},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1457165444594},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1457165444594},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1457165444594},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1457165444594},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1457165444563},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1457165444578},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1457165444578},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1457165444578},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1457165444578},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1457165444578},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1457165444563},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1457165444578},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1457165444578},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1457165444578},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1457165444578},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1457165444578},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1457165444578},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1457165444594},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1457165444578},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1457165444578},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1457165444594},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1457165444594},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1457165444594},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1457165444594},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1457165444594},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1457165444594},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1457165444594},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1457165444594}],"Category":[{"name":"visual studio","_id":"cim22utmp0002jwiyj7f044g7"},{"name":"windows","_id":"cim22utmw0006jwiyjawosev4"},{"name":"openMP","_id":"cim22utn00008jwiyjkmqspbv"},{"name":"杂谈","_id":"cim22utn2000ajwiyky8x6xa9"},{"name":"debug","_id":"cim22utn3000cjwiy7xxx2xx9"}],"Data":[],"Page":[],"Post":[{"title":"visual studio 2015 bug about git source control","date":"2016-03-16T02:00:11.000Z","_content":"\nvisual studio 2015增加了对git以及github的支持，但是使用过程中有一个问题，在向解决方案中添加了一个c的lib项目后，git无法正常工作。\n\n<!--more-->\n\n参考：[stack overflow 中Equalify的回答](http://stackoverflow.com/questions/34319008/git-issue-with-visual-studio-2015-update-1)\n\n报错：\n><font size=3>Could not open '****.VC.opendb': The process cannot access the file because it is being used by another process.</font>\n\n\n解决方案：\n添加**.VC.opendb*到*.gitignore*文件的*#User-specific files*条目下。\n\n    # User-specific files\n    *.suo\n    *.user\n    *.userosscache\n    *.sln.docstates\n    *.VC.opendb\n\n本来想复现一下这个错误，结果发现删除掉**.VC.opendb*之后，再打开解决方案，VS居然把*.gitignore*文件也加入了源代码管理里边去……\n因为不是第一次遇到这个错误了，就写点东西记下来好了","source":"_posts/visual-studio-2015-bug-about-git-source-control.md","raw":"---\ntitle: visual studio 2015 bug about git source control\ndate: 2016-03-16 10:00:11\ncategories: visual studio\ntags:\n---\n\nvisual studio 2015增加了对git以及github的支持，但是使用过程中有一个问题，在向解决方案中添加了一个c的lib项目后，git无法正常工作。\n\n<!--more-->\n\n参考：[stack overflow 中Equalify的回答](http://stackoverflow.com/questions/34319008/git-issue-with-visual-studio-2015-update-1)\n\n报错：\n><font size=3>Could not open '****.VC.opendb': The process cannot access the file because it is being used by another process.</font>\n\n\n解决方案：\n添加**.VC.opendb*到*.gitignore*文件的*#User-specific files*条目下。\n\n    # User-specific files\n    *.suo\n    *.user\n    *.userosscache\n    *.sln.docstates\n    *.VC.opendb\n\n本来想复现一下这个错误，结果发现删除掉**.VC.opendb*之后，再打开解决方案，VS居然把*.gitignore*文件也加入了源代码管理里边去……\n因为不是第一次遇到这个错误了，就写点东西记下来好了","slug":"visual-studio-2015-bug-about-git-source-control","published":1,"updated":"2016-03-16T02:19:47.769Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cim22utmh0000jwiyo0uqovd1","content":"<p>visual studio 2015增加了对git以及github的支持，但是使用过程中有一个问题，在向解决方案中添加了一个c的lib项目后，git无法正常工作。</p>\n<a id=\"more\"></a>\n<p>参考：<a href=\"http://stackoverflow.com/questions/34319008/git-issue-with-visual-studio-2015-update-1\" target=\"_blank\" rel=\"external\">stack overflow 中Equalify的回答</a></p>\n<p>报错：</p>\n<blockquote>\n<font size=\"3\">Could not open ‘<em>**</em>.VC.opendb’: The process cannot access the file because it is being used by another process.</font>\n\n\n</blockquote>\n<p>解决方案：<br>添加<em>*.VC.opendb</em>到<em>.gitignore</em>文件的<em>#User-specific files</em>条目下。</p>\n<pre><code># User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n*.VC.opendb\n</code></pre><p>本来想复现一下这个错误，结果发现删除掉<em>*.VC.opendb</em>之后，再打开解决方案，VS居然把<em>.gitignore</em>文件也加入了源代码管理里边去……<br>因为不是第一次遇到这个错误了，就写点东西记下来好了</p>\n","excerpt":"<p>visual studio 2015增加了对git以及github的支持，但是使用过程中有一个问题，在向解决方案中添加了一个c的lib项目后，git无法正常工作。</p>","more":"<p>参考：<a href=\"http://stackoverflow.com/questions/34319008/git-issue-with-visual-studio-2015-update-1\">stack overflow 中Equalify的回答</a></p>\n<p>报错：</p>\n<blockquote>\n<font size=3>Could not open ‘<em>**</em>.VC.opendb’: The process cannot access the file because it is being used by another process.</font>\n\n\n</blockquote>\n<p>解决方案：<br>添加<em>*.VC.opendb</em>到<em>.gitignore</em>文件的<em>#User-specific files</em>条目下。</p>\n<pre><code># User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n*.VC.opendb\n</code></pre><p>本来想复现一下这个错误，结果发现删除掉<em>*.VC.opendb</em>之后，再打开解决方案，VS居然把<em>.gitignore</em>文件也加入了源代码管理里边去……<br>因为不是第一次遇到这个错误了，就写点东西记下来好了</p>"},{"title":"powershell和cmake","date":"2016-03-09T10:18:03.000Z","_content":"\n在powershell环境下安装cmake，并用cmake生成metis。\n\n<!--more-->\n\n\n**问题描述和絮絮叨叨**\n今天遇到了个问题，老师提出来要把metis在windows下边编译为x64的。\n\nmetis在最新版本5.1.0里边是提供windows版本的生成方式的。遗憾的是我之前安装cmake并在图形界面安装之后，调试了半天才只能搞定32位的编译环境。今天逼不得已了，回头去看了看metis的build文件，看到里边提供了两种方式，一种是cmake GUI，另一种是cmake command line。索性试一试第二种。\n\n首先试了一下，发现虽然之前装了cmake GUI，但是还要再重新装一下cmake command line才可以在命令行下使用。恰好看到powershell好像还挺好用，就在powershell环境下安装了一下cmake。安装过程其实有点恼人啊，因为不熟悉powershell嘛。\n\n\n**解决方案**\n\n* 在powershell中安装cmake：\n\n * 这个过程中需要使用[chocolatey](https://chocolatey.org/)来作为powershell的“apt-get”，安装方法就按照官网的来就好。要注意在powershell中，Get-ExecutionPolicy至少为Bypass才可以。\n * 之后安装[chocolatey cmake](https://chocolatey.org/packages/cmake)，安装完之后发现并没有自动更新PATH，所以又安装的cmake.portable。\n\nOK，现在在powershell中敲一下cmake就发现可以用啦。\n\n* 使用cmake编译metis：\n\n * 其实这个事超简单，完成上边的事情之后，转到metis的目录下按照说明cmake了一下，DONE！\n * 不过有个事吧，就是visual studio 2015有个支持git进行源代码管理的功能，但是呢，cmake metis之后，sln、vcxproj这些项目文件都是在metis的子目录里边，这个时候想在VS中把代码添加到源代码管理就出问题了，因为貌似VS暂时只支持把sln文件所在的目录中包含的源代码添加到源码控制中。\n * 为此，特地改了一下metis的vsgen文件，重新制定让他把这些项目文件直接生成到metis的根目录下。这样虽然根目录稍微有点乱，但是至少有源代码控制之后，再写代码就很爽了。\n\n今天就说这些吧。","source":"_posts/powershell和cmake.md","raw":"---\ntitle: powershell和cmake\ndate: 2016-03-09 18:18:03\ncategories: windows\ntags:\n---\n\n在powershell环境下安装cmake，并用cmake生成metis。\n\n<!--more-->\n\n\n**问题描述和絮絮叨叨**\n今天遇到了个问题，老师提出来要把metis在windows下边编译为x64的。\n\nmetis在最新版本5.1.0里边是提供windows版本的生成方式的。遗憾的是我之前安装cmake并在图形界面安装之后，调试了半天才只能搞定32位的编译环境。今天逼不得已了，回头去看了看metis的build文件，看到里边提供了两种方式，一种是cmake GUI，另一种是cmake command line。索性试一试第二种。\n\n首先试了一下，发现虽然之前装了cmake GUI，但是还要再重新装一下cmake command line才可以在命令行下使用。恰好看到powershell好像还挺好用，就在powershell环境下安装了一下cmake。安装过程其实有点恼人啊，因为不熟悉powershell嘛。\n\n\n**解决方案**\n\n* 在powershell中安装cmake：\n\n * 这个过程中需要使用[chocolatey](https://chocolatey.org/)来作为powershell的“apt-get”，安装方法就按照官网的来就好。要注意在powershell中，Get-ExecutionPolicy至少为Bypass才可以。\n * 之后安装[chocolatey cmake](https://chocolatey.org/packages/cmake)，安装完之后发现并没有自动更新PATH，所以又安装的cmake.portable。\n\nOK，现在在powershell中敲一下cmake就发现可以用啦。\n\n* 使用cmake编译metis：\n\n * 其实这个事超简单，完成上边的事情之后，转到metis的目录下按照说明cmake了一下，DONE！\n * 不过有个事吧，就是visual studio 2015有个支持git进行源代码管理的功能，但是呢，cmake metis之后，sln、vcxproj这些项目文件都是在metis的子目录里边，这个时候想在VS中把代码添加到源代码管理就出问题了，因为貌似VS暂时只支持把sln文件所在的目录中包含的源代码添加到源码控制中。\n * 为此，特地改了一下metis的vsgen文件，重新制定让他把这些项目文件直接生成到metis的根目录下。这样虽然根目录稍微有点乱，但是至少有源代码控制之后，再写代码就很爽了。\n\n今天就说这些吧。","slug":"powershell和cmake","published":1,"updated":"2016-03-09T10:47:58.991Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cim22utmn0001jwiyc0zkuqzn","content":"<p>在powershell环境下安装cmake，并用cmake生成metis。</p>\n<a id=\"more\"></a>\n<p><strong>问题描述和絮絮叨叨</strong><br>今天遇到了个问题，老师提出来要把metis在windows下边编译为x64的。</p>\n<p>metis在最新版本5.1.0里边是提供windows版本的生成方式的。遗憾的是我之前安装cmake并在图形界面安装之后，调试了半天才只能搞定32位的编译环境。今天逼不得已了，回头去看了看metis的build文件，看到里边提供了两种方式，一种是cmake GUI，另一种是cmake command line。索性试一试第二种。</p>\n<p>首先试了一下，发现虽然之前装了cmake GUI，但是还要再重新装一下cmake command line才可以在命令行下使用。恰好看到powershell好像还挺好用，就在powershell环境下安装了一下cmake。安装过程其实有点恼人啊，因为不熟悉powershell嘛。</p>\n<p><strong>解决方案</strong></p>\n<ul>\n<li><p>在powershell中安装cmake：</p>\n<ul>\n<li>这个过程中需要使用<a href=\"https://chocolatey.org/\" target=\"_blank\" rel=\"external\">chocolatey</a>来作为powershell的“apt-get”，安装方法就按照官网的来就好。要注意在powershell中，Get-ExecutionPolicy至少为Bypass才可以。</li>\n<li>之后安装<a href=\"https://chocolatey.org/packages/cmake\" target=\"_blank\" rel=\"external\">chocolatey cmake</a>，安装完之后发现并没有自动更新PATH，所以又安装的cmake.portable。</li>\n</ul>\n</li>\n</ul>\n<p>OK，现在在powershell中敲一下cmake就发现可以用啦。</p>\n<ul>\n<li><p>使用cmake编译metis：</p>\n<ul>\n<li>其实这个事超简单，完成上边的事情之后，转到metis的目录下按照说明cmake了一下，DONE！</li>\n<li>不过有个事吧，就是visual studio 2015有个支持git进行源代码管理的功能，但是呢，cmake metis之后，sln、vcxproj这些项目文件都是在metis的子目录里边，这个时候想在VS中把代码添加到源代码管理就出问题了，因为貌似VS暂时只支持把sln文件所在的目录中包含的源代码添加到源码控制中。</li>\n<li>为此，特地改了一下metis的vsgen文件，重新制定让他把这些项目文件直接生成到metis的根目录下。这样虽然根目录稍微有点乱，但是至少有源代码控制之后，再写代码就很爽了。</li>\n</ul>\n</li>\n</ul>\n<p>今天就说这些吧。</p>\n","excerpt":"<p>在powershell环境下安装cmake，并用cmake生成metis。</p>","more":"<p><strong>问题描述和絮絮叨叨</strong><br>今天遇到了个问题，老师提出来要把metis在windows下边编译为x64的。</p>\n<p>metis在最新版本5.1.0里边是提供windows版本的生成方式的。遗憾的是我之前安装cmake并在图形界面安装之后，调试了半天才只能搞定32位的编译环境。今天逼不得已了，回头去看了看metis的build文件，看到里边提供了两种方式，一种是cmake GUI，另一种是cmake command line。索性试一试第二种。</p>\n<p>首先试了一下，发现虽然之前装了cmake GUI，但是还要再重新装一下cmake command line才可以在命令行下使用。恰好看到powershell好像还挺好用，就在powershell环境下安装了一下cmake。安装过程其实有点恼人啊，因为不熟悉powershell嘛。</p>\n<p><strong>解决方案</strong></p>\n<ul>\n<li><p>在powershell中安装cmake：</p>\n<ul>\n<li>这个过程中需要使用<a href=\"https://chocolatey.org/\">chocolatey</a>来作为powershell的“apt-get”，安装方法就按照官网的来就好。要注意在powershell中，Get-ExecutionPolicy至少为Bypass才可以。</li>\n<li>之后安装<a href=\"https://chocolatey.org/packages/cmake\">chocolatey cmake</a>，安装完之后发现并没有自动更新PATH，所以又安装的cmake.portable。</li>\n</ul>\n</li>\n</ul>\n<p>OK，现在在powershell中敲一下cmake就发现可以用啦。</p>\n<ul>\n<li><p>使用cmake编译metis：</p>\n<ul>\n<li>其实这个事超简单，完成上边的事情之后，转到metis的目录下按照说明cmake了一下，DONE！</li>\n<li>不过有个事吧，就是visual studio 2015有个支持git进行源代码管理的功能，但是呢，cmake metis之后，sln、vcxproj这些项目文件都是在metis的子目录里边，这个时候想在VS中把代码添加到源代码管理就出问题了，因为貌似VS暂时只支持把sln文件所在的目录中包含的源代码添加到源码控制中。</li>\n<li>为此，特地改了一下metis的vsgen文件，重新制定让他把这些项目文件直接生成到metis的根目录下。这样虽然根目录稍微有点乱，但是至少有源代码控制之后，再写代码就很爽了。</li>\n</ul>\n</li>\n</ul>\n<p>今天就说这些吧。</p>"},{"title":"终于消灭了一个BUG","date":"2016-03-21T13:52:31.000Z","_content":"\n耗费了两三天的时间的一个bug。\n\n\n<!--more-->\n\n**问题描述：**\n一个任务分配的module配合openmp，实现并行化。任务按照树状划分，但是根节点的数据会有错误。发现是由于任务分配的逻辑有问题，造成了子节点与父节点有可能处于同时计算中的状态。\n\n\n任务分配的module是一两周之前就已经写好测试过的，如下：\n\n**结构：**\ntask(n)为所有可能的任务\ntask_flag(n)为task对应的一个flag数组，标定task的状态\npool(n)为任务池\n\ntask中的任务在子节点都是完成的状态时被push到pool中。\n\n\n问题就出在了判定是否将父节点push到pool中的逻辑上。\n\n**错误的逻辑：**\ntask_flag有三个值:1,0,-1，分别表示当前任务未做，已做，不存在\n而当一个任务被push到pool中后，对应的task_flag就被标记为0了。\n在判断是否push父节点的时候，就会出现如下情况：两个子节点都被push到了pool中，因而两个子节点的flag都为0，即对应任务已做；当其中一个完成时，父节点即被push到pool中，而此时并不满足所有子节点都已经完成的条件。\n\n**修改后的逻辑：**\ntask_flag有四个值:1,0,-1,-9，分别表示当前任务未做，待做，已做，不存在\n当一个任务被push到pool中后，对应的task_flag就被标记为0；当任务完成后，再标记为-1。\n在对父节点进行判断时，只要看看子节点是不是都是-1即可。\n\n\n**反思一下：**\n问题出在了对自己的盲目自信上。其实上述逻辑漏洞在当时写这个module的时候就考虑过，还自以为做足了测试，没想到还是漏掉了。测试的时候没有暴露出来是因为没有上数据，只是让分配任务这部分空转，才得出了看似合理的结果。\n出了bug之后查了好多地方，最后才找到这里的问题。去查了openmp的atomic、critical等语句的用法，加上去也没啥用…折腾了两三天终于搞定了。所以说做模块测试的时候，还是要上数据跑一跑才能更有说服力。","source":"_posts/终于消灭了一个BUG.md","raw":"---\ntitle: 终于消灭了一个BUG\ndate: 2016-03-21 21:52:31\ncategories: openMP\ntags:\n---\n\n耗费了两三天的时间的一个bug。\n\n\n<!--more-->\n\n**问题描述：**\n一个任务分配的module配合openmp，实现并行化。任务按照树状划分，但是根节点的数据会有错误。发现是由于任务分配的逻辑有问题，造成了子节点与父节点有可能处于同时计算中的状态。\n\n\n任务分配的module是一两周之前就已经写好测试过的，如下：\n\n**结构：**\ntask(n)为所有可能的任务\ntask_flag(n)为task对应的一个flag数组，标定task的状态\npool(n)为任务池\n\ntask中的任务在子节点都是完成的状态时被push到pool中。\n\n\n问题就出在了判定是否将父节点push到pool中的逻辑上。\n\n**错误的逻辑：**\ntask_flag有三个值:1,0,-1，分别表示当前任务未做，已做，不存在\n而当一个任务被push到pool中后，对应的task_flag就被标记为0了。\n在判断是否push父节点的时候，就会出现如下情况：两个子节点都被push到了pool中，因而两个子节点的flag都为0，即对应任务已做；当其中一个完成时，父节点即被push到pool中，而此时并不满足所有子节点都已经完成的条件。\n\n**修改后的逻辑：**\ntask_flag有四个值:1,0,-1,-9，分别表示当前任务未做，待做，已做，不存在\n当一个任务被push到pool中后，对应的task_flag就被标记为0；当任务完成后，再标记为-1。\n在对父节点进行判断时，只要看看子节点是不是都是-1即可。\n\n\n**反思一下：**\n问题出在了对自己的盲目自信上。其实上述逻辑漏洞在当时写这个module的时候就考虑过，还自以为做足了测试，没想到还是漏掉了。测试的时候没有暴露出来是因为没有上数据，只是让分配任务这部分空转，才得出了看似合理的结果。\n出了bug之后查了好多地方，最后才找到这里的问题。去查了openmp的atomic、critical等语句的用法，加上去也没啥用…折腾了两三天终于搞定了。所以说做模块测试的时候，还是要上数据跑一跑才能更有说服力。","slug":"终于消灭了一个BUG","published":1,"updated":"2016-03-21T14:16:57.675Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cim22utms0003jwiy60qf0zi4","content":"<p>耗费了两三天的时间的一个bug。</p>\n<a id=\"more\"></a>\n<p><strong>问题描述：</strong><br>一个任务分配的module配合openmp，实现并行化。任务按照树状划分，但是根节点的数据会有错误。发现是由于任务分配的逻辑有问题，造成了子节点与父节点有可能处于同时计算中的状态。</p>\n<p>任务分配的module是一两周之前就已经写好测试过的，如下：</p>\n<p><strong>结构：</strong><br>task(n)为所有可能的任务<br>task_flag(n)为task对应的一个flag数组，标定task的状态<br>pool(n)为任务池</p>\n<p>task中的任务在子节点都是完成的状态时被push到pool中。</p>\n<p>问题就出在了判定是否将父节点push到pool中的逻辑上。</p>\n<p><strong>错误的逻辑：</strong><br>task_flag有三个值:1,0,-1，分别表示当前任务未做，已做，不存在<br>而当一个任务被push到pool中后，对应的task_flag就被标记为0了。<br>在判断是否push父节点的时候，就会出现如下情况：两个子节点都被push到了pool中，因而两个子节点的flag都为0，即对应任务已做；当其中一个完成时，父节点即被push到pool中，而此时并不满足所有子节点都已经完成的条件。</p>\n<p><strong>修改后的逻辑：</strong><br>task_flag有四个值:1,0,-1,-9，分别表示当前任务未做，待做，已做，不存在<br>当一个任务被push到pool中后，对应的task_flag就被标记为0；当任务完成后，再标记为-1。<br>在对父节点进行判断时，只要看看子节点是不是都是-1即可。</p>\n<p><strong>反思一下：</strong><br>问题出在了对自己的盲目自信上。其实上述逻辑漏洞在当时写这个module的时候就考虑过，还自以为做足了测试，没想到还是漏掉了。测试的时候没有暴露出来是因为没有上数据，只是让分配任务这部分空转，才得出了看似合理的结果。<br>出了bug之后查了好多地方，最后才找到这里的问题。去查了openmp的atomic、critical等语句的用法，加上去也没啥用…折腾了两三天终于搞定了。所以说做模块测试的时候，还是要上数据跑一跑才能更有说服力。</p>\n","excerpt":"<p>耗费了两三天的时间的一个bug。</p>","more":"<p><strong>问题描述：</strong><br>一个任务分配的module配合openmp，实现并行化。任务按照树状划分，但是根节点的数据会有错误。发现是由于任务分配的逻辑有问题，造成了子节点与父节点有可能处于同时计算中的状态。</p>\n<p>任务分配的module是一两周之前就已经写好测试过的，如下：</p>\n<p><strong>结构：</strong><br>task(n)为所有可能的任务<br>task_flag(n)为task对应的一个flag数组，标定task的状态<br>pool(n)为任务池</p>\n<p>task中的任务在子节点都是完成的状态时被push到pool中。</p>\n<p>问题就出在了判定是否将父节点push到pool中的逻辑上。</p>\n<p><strong>错误的逻辑：</strong><br>task_flag有三个值:1,0,-1，分别表示当前任务未做，已做，不存在<br>而当一个任务被push到pool中后，对应的task_flag就被标记为0了。<br>在判断是否push父节点的时候，就会出现如下情况：两个子节点都被push到了pool中，因而两个子节点的flag都为0，即对应任务已做；当其中一个完成时，父节点即被push到pool中，而此时并不满足所有子节点都已经完成的条件。</p>\n<p><strong>修改后的逻辑：</strong><br>task_flag有四个值:1,0,-1,-9，分别表示当前任务未做，待做，已做，不存在<br>当一个任务被push到pool中后，对应的task_flag就被标记为0；当任务完成后，再标记为-1。<br>在对父节点进行判断时，只要看看子节点是不是都是-1即可。</p>\n<p><strong>反思一下：</strong><br>问题出在了对自己的盲目自信上。其实上述逻辑漏洞在当时写这个module的时候就考虑过，还自以为做足了测试，没想到还是漏掉了。测试的时候没有暴露出来是因为没有上数据，只是让分配任务这部分空转，才得出了看似合理的结果。<br>出了bug之后查了好多地方，最后才找到这里的问题。去查了openmp的atomic、critical等语句的用法，加上去也没啥用…折腾了两三天终于搞定了。所以说做模块测试的时候，还是要上数据跑一跑才能更有说服力。</p>"},{"title":"开篇","date":"2016-03-06T02:13:36.000Z","_content":"准备开始写博客。\n<!--more-->\n花了两三天的时间，终于搭建好了。其间接触到了Github Pages, Hexo, Markdown等一系列工具，查阅了好几篇教程文章，现在算是基本入门了。\n\n以后有时间就在这写写东西。\n\n最终基本上是按照这个教程的（四）来做的：\n[GitHub Pages + Hexo搭建博客](http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more \"GitHub Pages + Hexo搭建博客\")\n按照这个做可能会遇到一些问题，比如进行到4.2的7时，可能会报错，这是由于.git被5中的步骤删除了，重新git init之后就可以了。\n\n总之多多Google一下基本都有解决方案。\n\n对了，发现知乎现在发展的真是不错，也能找到很多有用的东西。\n\n今天就写这些吧。","source":"_posts/开篇.md","raw":"---\ntitle: 开篇\ndate: 2016-03-06 10:13:36\ncategories: 杂谈\ntags:\n---\n准备开始写博客。\n<!--more-->\n花了两三天的时间，终于搭建好了。其间接触到了Github Pages, Hexo, Markdown等一系列工具，查阅了好几篇教程文章，现在算是基本入门了。\n\n以后有时间就在这写写东西。\n\n最终基本上是按照这个教程的（四）来做的：\n[GitHub Pages + Hexo搭建博客](http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more \"GitHub Pages + Hexo搭建博客\")\n按照这个做可能会遇到一些问题，比如进行到4.2的7时，可能会报错，这是由于.git被5中的步骤删除了，重新git init之后就可以了。\n\n总之多多Google一下基本都有解决方案。\n\n对了，发现知乎现在发展的真是不错，也能找到很多有用的东西。\n\n今天就写这些吧。","slug":"开篇","published":1,"updated":"2016-03-06T02:52:52.823Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cim22utmt0004jwiyvnevd3zu","content":"<p>准备开始写博客。<br><a id=\"more\"></a><br>花了两三天的时间，终于搭建好了。其间接触到了Github Pages, Hexo, Markdown等一系列工具，查阅了好几篇教程文章，现在算是基本入门了。</p>\n<p>以后有时间就在这写写东西。</p>\n<p>最终基本上是按照这个教程的（四）来做的：<br><a href=\"http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more\" title=\"GitHub Pages + Hexo搭建博客\" target=\"_blank\" rel=\"external\">GitHub Pages + Hexo搭建博客</a><br>按照这个做可能会遇到一些问题，比如进行到4.2的7时，可能会报错，这是由于.git被5中的步骤删除了，重新git init之后就可以了。</p>\n<p>总之多多Google一下基本都有解决方案。</p>\n<p>对了，发现知乎现在发展的真是不错，也能找到很多有用的东西。</p>\n<p>今天就写这些吧。</p>\n","excerpt":"<p>准备开始写博客。<br>","more":"<br>花了两三天的时间，终于搭建好了。其间接触到了Github Pages, Hexo, Markdown等一系列工具，查阅了好几篇教程文章，现在算是基本入门了。</p>\n<p>以后有时间就在这写写东西。</p>\n<p>最终基本上是按照这个教程的（四）来做的：<br><a href=\"http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more\" title=\"GitHub Pages + Hexo搭建博客\">GitHub Pages + Hexo搭建博客</a><br>按照这个做可能会遇到一些问题，比如进行到4.2的7时，可能会报错，这是由于.git被5中的步骤删除了，重新git init之后就可以了。</p>\n<p>总之多多Google一下基本都有解决方案。</p>\n<p>对了，发现知乎现在发展的真是不错，也能找到很多有用的东西。</p>\n<p>今天就写这些吧。</p>"},{"title":"除了一个小bug","date":"2016-03-08T08:06:00.000Z","_content":"\n昨天发现的一个小bug，搞了一天才搞通。\n\n调用函数发生未期望的数组修改。原因是，传递的其他参数空间申请出了错。\n\n<!--more-->\n\n**问题描述**\n在用fortran写的程序中调用metis的接口，调用之后传递的数组值被改变了，这个事情在之前调用的时候并没有发生过。相关数组是 ia, perm, iperm。 ia的值本应保持不变，但在这次调用过程中发生了变化。\n\n由于metis本身并没有提供官方fortran接口，同时说实话他的manual写的太简略了……所以我一度认为是metis没有把这个接口写好。后来和老师讨论了好一会儿，还是决定把metis的接口单独拎出来写个demo看看会不会出这个问题。\n\n老师的本意是想让我自己重新写一个demo，我自作主张拿原来的程序中的代码拼了一个小demo，run的时候发现perm, iperm未定义。才想起来回去找perm，iperm的定义和分配空间的语句。\n\n结果找到之后发现perm, iperm分配的空间没有随着我的算例大小变化一起动态分配，即空间分配小了。因此在调用metis的接口时，metis对perm，iperm进行写操作过程中，会越界写入ia的空间中，最终的结果就导致了ia数组发生了变化。\n\n后来再看，确实觉得ia数组并不是在metis中被释放了，其被修改后的数据并不是随机值，而是很接近perm中的数据形式。\n\n**谈谈教训**\n教训嘛，发现数组被改掉之后可以看看被改掉的数据是什么，如果像某一个别的数组，那很可能是被那个数组越界写操作给覆盖了，也许可以依据此回溯到究竟是哪出的问题。\n哦对了，还有就是函数调用的时候，传递多个数组参数，有数组被意外写进去东西时，可能是其他数组分配空间不匹配造成的数组越界行为。","source":"_posts/除了一个小bug.md","raw":"---\ntitle: 除了一个小bug\ndate: 2016-03-08 16:06:00\ncategories: debug\ntags:\n---\n\n昨天发现的一个小bug，搞了一天才搞通。\n\n调用函数发生未期望的数组修改。原因是，传递的其他参数空间申请出了错。\n\n<!--more-->\n\n**问题描述**\n在用fortran写的程序中调用metis的接口，调用之后传递的数组值被改变了，这个事情在之前调用的时候并没有发生过。相关数组是 ia, perm, iperm。 ia的值本应保持不变，但在这次调用过程中发生了变化。\n\n由于metis本身并没有提供官方fortran接口，同时说实话他的manual写的太简略了……所以我一度认为是metis没有把这个接口写好。后来和老师讨论了好一会儿，还是决定把metis的接口单独拎出来写个demo看看会不会出这个问题。\n\n老师的本意是想让我自己重新写一个demo，我自作主张拿原来的程序中的代码拼了一个小demo，run的时候发现perm, iperm未定义。才想起来回去找perm，iperm的定义和分配空间的语句。\n\n结果找到之后发现perm, iperm分配的空间没有随着我的算例大小变化一起动态分配，即空间分配小了。因此在调用metis的接口时，metis对perm，iperm进行写操作过程中，会越界写入ia的空间中，最终的结果就导致了ia数组发生了变化。\n\n后来再看，确实觉得ia数组并不是在metis中被释放了，其被修改后的数据并不是随机值，而是很接近perm中的数据形式。\n\n**谈谈教训**\n教训嘛，发现数组被改掉之后可以看看被改掉的数据是什么，如果像某一个别的数组，那很可能是被那个数组越界写操作给覆盖了，也许可以依据此回溯到究竟是哪出的问题。\n哦对了，还有就是函数调用的时候，传递多个数组参数，有数组被意外写进去东西时，可能是其他数组分配空间不匹配造成的数组越界行为。","slug":"除了一个小bug","published":1,"updated":"2016-03-08T08:32:48.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cim22utmv0005jwiyfnbks0xv","content":"<p>昨天发现的一个小bug，搞了一天才搞通。</p>\n<p>调用函数发生未期望的数组修改。原因是，传递的其他参数空间申请出了错。</p>\n<a id=\"more\"></a>\n<p><strong>问题描述</strong><br>在用fortran写的程序中调用metis的接口，调用之后传递的数组值被改变了，这个事情在之前调用的时候并没有发生过。相关数组是 ia, perm, iperm。 ia的值本应保持不变，但在这次调用过程中发生了变化。</p>\n<p>由于metis本身并没有提供官方fortran接口，同时说实话他的manual写的太简略了……所以我一度认为是metis没有把这个接口写好。后来和老师讨论了好一会儿，还是决定把metis的接口单独拎出来写个demo看看会不会出这个问题。</p>\n<p>老师的本意是想让我自己重新写一个demo，我自作主张拿原来的程序中的代码拼了一个小demo，run的时候发现perm, iperm未定义。才想起来回去找perm，iperm的定义和分配空间的语句。</p>\n<p>结果找到之后发现perm, iperm分配的空间没有随着我的算例大小变化一起动态分配，即空间分配小了。因此在调用metis的接口时，metis对perm，iperm进行写操作过程中，会越界写入ia的空间中，最终的结果就导致了ia数组发生了变化。</p>\n<p>后来再看，确实觉得ia数组并不是在metis中被释放了，其被修改后的数据并不是随机值，而是很接近perm中的数据形式。</p>\n<p><strong>谈谈教训</strong><br>教训嘛，发现数组被改掉之后可以看看被改掉的数据是什么，如果像某一个别的数组，那很可能是被那个数组越界写操作给覆盖了，也许可以依据此回溯到究竟是哪出的问题。<br>哦对了，还有就是函数调用的时候，传递多个数组参数，有数组被意外写进去东西时，可能是其他数组分配空间不匹配造成的数组越界行为。</p>\n","excerpt":"<p>昨天发现的一个小bug，搞了一天才搞通。</p>\n<p>调用函数发生未期望的数组修改。原因是，传递的其他参数空间申请出了错。</p>","more":"<p><strong>问题描述</strong><br>在用fortran写的程序中调用metis的接口，调用之后传递的数组值被改变了，这个事情在之前调用的时候并没有发生过。相关数组是 ia, perm, iperm。 ia的值本应保持不变，但在这次调用过程中发生了变化。</p>\n<p>由于metis本身并没有提供官方fortran接口，同时说实话他的manual写的太简略了……所以我一度认为是metis没有把这个接口写好。后来和老师讨论了好一会儿，还是决定把metis的接口单独拎出来写个demo看看会不会出这个问题。</p>\n<p>老师的本意是想让我自己重新写一个demo，我自作主张拿原来的程序中的代码拼了一个小demo，run的时候发现perm, iperm未定义。才想起来回去找perm，iperm的定义和分配空间的语句。</p>\n<p>结果找到之后发现perm, iperm分配的空间没有随着我的算例大小变化一起动态分配，即空间分配小了。因此在调用metis的接口时，metis对perm，iperm进行写操作过程中，会越界写入ia的空间中，最终的结果就导致了ia数组发生了变化。</p>\n<p>后来再看，确实觉得ia数组并不是在metis中被释放了，其被修改后的数据并不是随机值，而是很接近perm中的数据形式。</p>\n<p><strong>谈谈教训</strong><br>教训嘛，发现数组被改掉之后可以看看被改掉的数据是什么，如果像某一个别的数组，那很可能是被那个数组越界写操作给覆盖了，也许可以依据此回溯到究竟是哪出的问题。<br>哦对了，还有就是函数调用的时候，传递多个数组参数，有数组被意外写进去东西时，可能是其他数组分配空间不匹配造成的数组越界行为。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cim22utmh0000jwiyo0uqovd1","category_id":"cim22utmp0002jwiyj7f044g7","_id":"cim22utmz0007jwiy8ujbicz2"},{"post_id":"cim22utmn0001jwiyc0zkuqzn","category_id":"cim22utmw0006jwiyjawosev4","_id":"cim22utn10009jwiys8apz8xt"},{"post_id":"cim22utms0003jwiy60qf0zi4","category_id":"cim22utn00008jwiyjkmqspbv","_id":"cim22utn2000bjwiyzvy6njrd"},{"post_id":"cim22utmt0004jwiyvnevd3zu","category_id":"cim22utn2000ajwiyky8x6xa9","_id":"cim22utn4000djwiyky1o6zsw"},{"post_id":"cim22utmv0005jwiyfnbks0xv","category_id":"cim22utn3000cjwiy7xxx2xx9","_id":"cim22utn4000ejwiy7mc1gmya"}],"PostTag":[],"Tag":[]}}